# 트리 자료구조
# 노드와 노드의 연결로 표현하며, 노드는 어떤 정보를 가진 개체를 의미함
# 큰 데이터를 다루는 시스템(DB, FILE SYSTEM)은 대부분 데이터를 트리구조로 저장해서 이진탐색과 같은 기법을 사용하여 빠른 탐색을 한다.
# 트리의 특징 5가지
# 1. 트리는 부모 노드와 자식 노드의 관계로 표현된다.
# 2. 트리의 최상단 노드를 루트 노르라고 한다.
# 3. 트리의 최하단 노드를 단말 노드라고 한다.
# 4. 트리에서 일부를 떼어내도 트리 구조이며, 이를 서브 트리라 한다.
# 5. 트리는 파일 시스템과 같이 계층적이고 정렬된 데이터를 다루기에 적합하다.

# 이진 탐색트리
# 이진 탐색이 동작할 수 있도록 고안된, 효율적 탐색이 가능한 자료구조
# 이진 탐색 트리의 특징 2가지
# 1. 부모 노드보다 왼쪽 자식 노드가 작다.
# 2. 부모 노드보다 오른쪽 자식 노드가 크다.
# => 왼쪽 자식노드 < 부모 노드 < 오른쪽 자식노드
# 이진 탐색의 탐색 과정
# 1. 루트 노드부터 방문하여, target과 비교
# 2-1. 루트 노드 < target 이면, 오른쪽 노드를 방문
# 2-2. 루트 노드 > target 이면, 왼쪽 노드를 방문
# 3. 방문 노드가 부모 노드가 되어, 1~2를 반복한 후 방문 노드 == target 일 때 종료

# 이진 탐색 문제는 입력 데이터가 많거나, 탐색 범위가 매우 넓은 편
# 만약 입력 데이터가 너무 많은 경우, input()은 시간초과 가능성 있음. 따라서, sys 라이브러리의 readline()을 사용하면 됨.
# 문자열 1개 입력받기
# readline()으로 입력받은 후, rstrip()을 호출해야 엔터로 인한 줄 바꿈 기호가 제거된다.
import sys
input_data = sys.stdin.readline().rstrip()
print(input_data)